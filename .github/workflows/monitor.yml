name: Ranch Watch
on:
  schedule:
    - cron: "0 */2 * * *"   # every 2 hours
  workflow_dispatch:
    inputs:
      test:
        description: "Send a test message"
        required: false
        default: "false"
      dump_all:
        description: "Post a full snapshot of current businesses and properties"
        required: false
        default: "false"

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          python -m playwright install --with-deps chromium
      - name: Sanity check webhook (only on test runs)
        if: ${{ github.event.inputs.test == 'true' }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          python - << 'PY'
import os, json, urllib.request

u = os.environ["DISCORD_WEBHOOK"].strip()
print(f"Testing webhook URL begins with: {u[:40]}...")

if not u:
    raise SystemExit("❌ DISCORD_WEBHOOK is not set or empty.")

url = u + ("?wait=true" if "?wait=" not in u else "")
headers = {
    "Content-Type": "application/json",
    "User-Agent": "ranch-watch-bot/1.0"
}
data = json.dumps({"content": "✅ Webhook sanity ping from GitHub Actions"}).encode("utf-8")
req = urllib.request.Request(url, data=data, headers=headers)

try:
    with urllib.request.urlopen(req, timeout=20) as r:
        print("✅ Discord responded with status:", r.status)
except Exception as e:
    print("❌ Webhook failed:", e)
    raise
PY
      - name: Run monitor
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_TEST: ${{ github.event.inputs.test }}
          POST_ALL: ${{ github.event.inputs.dump_all }}
        run: python monitor.py

      - name: Commit state updates (if any)
        run: |
          git config user.name "ranch-bot"
          git config user.email "ranch-bot@users.noreply.github.com"
          git add state/*.json
          git diff --cached --quiet || git commit -m "Update seen items $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          git push

